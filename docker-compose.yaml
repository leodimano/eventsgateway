services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.15
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - eventsgateway

  kafka:
    image: confluentinc/cp-kafka:6.2.15 #Kafka 2.8
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: uploads-au_default:1:0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
    depends_on:
      zookeeper:
        condition: service_started
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - eventsgateway

  spark-notebook:
    image: jupyter/all-spark-notebook
    ports:
      - '8888:8888'
    volumes:
      - ./spark-notebook/work:/home/jovyan/work
    networks:
      - eventsgateway

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778" 
      - "16686:16686"
      - "4317:4317"
    networks:
        - eventsgateway

  eventsgateway-api:
    image: eventsgateway-server-dev
    ports:
      - "5000:5000"
      - "9091:9091"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5000" ]
      interval: 5s
      timeout: 10s
      retries: 10

    volumes:
      - ./server:/app
    command:
      - sh
      - -c
      - 'go run main.go start -d'
    networks:
      - eventsgateway

  jupyter:
    image: quay.io/jupyter/all-spark-notebook
    ports:
      - 8888:8888
    volumes:
      - ./spark-notebook:/home/jovyan/work
    networks:
      - eventsgateway

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./testing/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - eventsgateway

  grafana:
    image: grafana/grafana
    restart: always
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'foobar'
      GF_USERS_ALLOW_SIGN_UP: 'false'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - eventsgateway

networks:
  eventsgateway:

volumes:
  prometheus_data: {}
  grafana_data: {}